version: 2.1
executors:
  docker-builder:
    docker:
      - image: circleci/openjdk:11-jdk
  docker-azure:
    docker:
      - image: microsoft/azure-cli

jobs:
  build-software:
    # Build the application
    executor: docker-builder
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx1024m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Build dependency list
          command: mvn -B install -DskipTests dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Build software
          command: mvn -B clean package javadoc:javadoc javadoc:aggregate
      - persist_to_workspace:
          root: ~/repo
          paths:
            - collection
            - common
            - functional
            - target
            - pom.xml
#      - run:
#          name: Report code coverage
#          command: mvn -B -Pcoveralls -DrepoKey=$coverageKey
#      - run:
#          name: Performing analysis
#          command: mvn -B -Psonar -Dsonar.login=$sonarKey
      - run:
          name: Preparing test reports
          command: mkdir -p target/junit/ && find . -type f -regex ".*/target/.*-reports/.*xml" -exec cp {} target/junit/ \;
      - store_test_results:
          path: target/junit/

  publish-javadoc:
    executor: docker-azure
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Publishing documentation Azure
          command: |
            az storage blob upload-batch \
                --source ~/repo/target/site/apidocs \
                --destination $azureBlob \
                --destination-path java/language/snapshot \
                --connection-string $azureDocString

  release-dryrun:
    # verify that the software is release-able on the master branch
    executor: docker-builder
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx1024m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Performing a dry run release
          command: mvn -B release:prepare -DdryRun=true -P release-profile -s settings.xml

  release:
    executor: docker-build
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Setup the PGP key
          command: |
            openssl aes-256-cbc -pass pass:$openSslPwd -in private-key.gpg.enc -out private-key.gpg -d
            gpg --import private-key.gpg
      - run:
          name: Perform release
          command: mvn -V -B -s settings.xml -P release-profile install deploy

workflows:
  version: 2
  commit-build:
    jobs:
      - build-software
      - publish-javadoc:
          requires:
            - build-software
          filters:
            branches:
              only: master
  release-dry-run:
    triggers:
      - schedule:
          cron: "0 0 * * 1"
          filters:
            branches:
              only: master
    jobs:
      - release-dryrun
