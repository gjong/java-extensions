version: 2.1
executors:
  docker-builder:
    docker:
      - image: circleci/openjdk:11-jdk
  docker-azure:
    docker:
      - image: microsoft/azure-cli

jobs:
  build-software:
    # Build the application
    executor: docker-builder
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx1024m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Build dependency list
          command: bash ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run:
          name: Build software
          command: bash ./gradlew check
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
      - store_test_results:
          path: build/test-results/

  publish-sonar:
    executor: docker-builder
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Performing analysis
          command: bash ./gradlew sonarqube -Dsonar.login=$sonarKey

  release:
    executor: docker-builder
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Build dependency list
          command: bash ./gradlew dependencies
      - run:
          name: Setup the PGP key
          command: |
            openssl aes-256-cbc -pass pass:$openSslPwd -md md5 -in private-key.gpg.enc -out signing-key -d
            gpg --batch --import signing-key
            shred signing-key
      - run:
          name: Perform release
          command: bash ./gradlew publish
      - persist_to_workspace:
          root: ~/repo
          paths:
            - target
            - promo-site

workflows:
  version: 2
  commit-build:
    jobs:
      - build-software:
          filters:
            branches:
              ignore: /release\/.*/
      - publish-sonar:
          requires:
            - build-software
          filters:
            branches:
              only: master
  release-build:
    jobs:
      - release:
          filters:
            branches:
              only: /release\/.*/

